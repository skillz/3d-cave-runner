def versionMajor = 4
def versionMinor = 3
def versionPatch = 16
def versionBuild = System.getenv('BUILD_NUMBER') ? Integer.parseInt(System.getenv('BUILD_NUMBER')) : 1

buildscript {
    repositories {
        jcenter()
        mavenCentral()
        maven { url 'https://maven.fabric.io/public' }
    }


    dependencies {
        // The Fabric Gradle plugin uses an open ended version to react
        // quickly to Android tooling updates
        classpath 'com.getkeepsafe.dexcount:dexcount-gradle-plugin:0.7.1'
        classpath 'io.fabric.tools:gradle:1.22.1'
        classpath 'com.google.gms:google-services:3.1.0'

    }
}

apply plugin: 'com.android.application'
//apply plugin: 'com.getkeepsafe.dexcount'
apply plugin: 'io.fabric'

android {
    signingConfigs {
        config {
            keyAlias 'CaveRunnerKeystore'
            keyPassword 'password'
            storeFile file('/etc/android.jks')
            storePassword 'password'
            // make sure to update the .jks file pointing to your machine
        }
    }
    compileSdkVersion 26
    buildToolsVersion '27.0.3'
    defaultConfig {
        applicationId "com.skillzgames.caverun"
        minSdkVersion 19
        targetSdkVersion 22
        ndk {
            abiFilters "armeabi-v7a", "x86"
        }
        multiDexEnabled true
        versionCode versionMajor * 10000000 + versionMinor * 100000 + versionPatch * 1000 + versionBuild
        versionName "${versionMajor}.${versionMinor}.${versionPatch}.${versionBuild}"
    }
    flavorDimensions "currency"
    buildTypes {
        release {
            debuggable=false
            minifyEnabled true
            shrinkResources false

            signingConfig signingConfigs.config
            proguardFiles 'proguard-rules.pro'
            ext.betaDistributionGroupAliases = 'sdk,qa-2,ts,product'
        }
        debug {
            minifyEnabled false
            debuggable true
        }
    }
    lintOptions {
        checkReleaseBuilds true
        // Or, if you prefer, you can continue to check for errors in release builds,
        // but continue the build even when errors are found:
        abortOnError false
    }
    productFlavors {
        main {
            resValue "string", "app_name", "3D Cave Runner"
            dimension "currency"
        }
        vconly {
            resValue "string", "app_name", "Cave Runner"
            applicationIdSuffix ".vconly"
            dimension "currency"
        }
    }
    sourceSets {
        vconly {
            manifest.srcFile "src/vconly/AndroidManifest.xml"
            assets.srcDir "src/main/assets"
            res.srcDir "src/main/res"
            jniLibs.srcDir "src/main/jniLibs"
        }
        main {
            manifest.srcFile "src/main/AndroidManifest.xml"
            assets.srcDir "src/main/assets"
            res.srcDir "src/main/res"
            jniLibs.srcDir "src/main/jniLibs"
        }
    }
}

dependencies {
    compile files('libs/unity-classes.jar')
    //Skillz SDK

    compile 'com.skillz.sdk:skillz-sdk-android:20.0.3-SNAPSHOT'
    compile('com.crashlytics.sdk.android:crashlytics:2.5.2@aar') {
        transitive = true
    }
    compile 'com.google.android.gms:play-services-gcm:11.8.0'

    compile 'com.android.support:design:26.1.0'
    compile 'com.android.support:support-v4:26.1.0'
    compile 'com.android.support:appcompat-v7:26.1.0'
    compile 'com.android.support:recyclerview-v7:26.1.0'

}

repositories {
    flatDir {
        dirs 'libs'
    }
    maven {
        url 'http://nexus.skillz.com/content/groups/public/'
    }
    maven {
        url 'https://maven.fabric.io/public'
    }
    maven {
        url 'https://maven.google.com'
    }
    jcenter()
}

apply plugin: 'com.google.gms.google-services'
